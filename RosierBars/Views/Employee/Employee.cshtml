@model RosierBars.Models.EmployeeForm

@{
    ViewBag.Title = "Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    :root {
        --primary-color: #7B3F00; /* Chocolate brown */
        --secondary-color: #D2691E; /* Light chocolate */
        --accent-color: #FFD700; /* Gold */
        --light-bg: #FFF8E1; /* Cream */
        --dark-text: #4B2C20; /* Dark brown */
        --error-color: #dc3545;
    }

    input, select, textarea {
        max-width: 100%;
    }

    .employee-form-container {
        background-color: var(--light-bg);
        padding: 2rem;
        min-height: 100vh;
        padding-top: 80px;
        padding-bottom:50px;
    }

    .form-title {
        color: var(--primary-color);
        text-align: center;
        margin-bottom: 2rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .employee-form {
        background: white;
        border-radius: 10px;
        padding: 2rem;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        max-width: 1200px;
        margin: 0 auto;
    }

    .form-section {
        display: flex;
        gap: 2rem;
        margin-bottom: 1.5rem;
    }

    .form-column {
        flex: 1;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: var(--dark-text);
    }

    .form-control {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 6px;
        transition: all 0.3s;
    }

        .form-control:focus {
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 0.2rem rgba(210, 105, 30, 0.25);
        }

    .select-emp {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 6px;
        background-color: white;
    }

    .text-danger {
        color: var(--error-color);
        font-size: 0.85rem;
        margin-top: 0.25rem;
    }

    .form-actions {
        display: flex;
        justify-content: center;
        gap: 1.5rem;
        margin-top: 2rem;
    }

    .btn-submit {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 0.75rem 2rem;
        border-radius: 6px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
    }

        .btn-submit:hover {
            background-color: var(--secondary-color);
            transform: translateY(-2px);
        }

    .btn-list {
        background-color: var(--dark-text);
        color: white;
        border: none;
        padding: 0.75rem 2rem;
        border-radius: 6px;
        font-weight: 600;
        text-decoration: none;
        text-align: center;
        transition: all 0.3s;
    }

        .btn-list:hover {
            background-color: var(--secondary-color);
            color: white;
            transform: translateY(-2px);
        }

    textarea.form-control {
        min-height: 100px;
        resize: vertical;
    }

    @@media (max-width: 768px) {
        .form-section {
            flex-direction: column;
            gap: 1rem;
        }

        .form-actions {
            flex-direction: column;
            gap: 1rem;
        }

        .btn-submit, .btn-list {
            width: 100%;
        }
    }
</style>

<div class="employee-form-container">
    <h1 class="text-center form-title text-uppercase">@ViewBag.EmployeeAdd</h1>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="employee-form">
            <h2 class="form-title">Employee Information</h2>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-section">
                <div class="form-column">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter first name" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter email address" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter city" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter postal code" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-column">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter last name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter phone number" } })
                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter state" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter country" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "form-label" })
                        <select name="Gender" id="Gender" class="select-emp">
                            <option value="" disabled selected>Select gender</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-section">
                <div class="form-column">
                    <div class="form-group">
                        @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "form-label" })
                        @Html.TextBoxFor(model => model.HireDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter department" } })
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "form-label" })
                        <select name="Status" id="Status" class="select-emp">
                            <option value="" disabled selected>Select status</option>
                            <option value="Active">Active</option>
                            <option value="InActive">InActive</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-column">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter position" } })
                        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter salary" } })
                        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmergencyContact, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.EmergencyContact, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter emergency contact" } })
                        @Html.ValidationMessageFor(model => model.EmergencyContact, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BankAccount, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.BankAccount, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter bank account details" } })
                @Html.ValidationMessageFor(model => model.BankAccount, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "form-label" })
                @Html.TextAreaFor(model => model.Address, new { @class = "form-control", placeholder = "Enter full address", rows = "3" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>

            <div class="form-actions">
                <input type="submit" value="Submit" class="btn-submit" />
                @Html.ActionLink("Go To List", "List", null, new { @class = "btn-list" })
            </div>
        </div>
    }
</div>