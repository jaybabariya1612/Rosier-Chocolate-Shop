@model IEnumerable<RosierBars.Models.OrderModel>

<style>
    :root {
        --chocolate-dark: #2A2118;
        --chocolate-medium: #4A3728;
        --chocolate-light: #6D4C35;
        --chocolate-accent: #8B5A2B;
        --cream-light: #F8F1E5;
        --cream-dark: #E8D9C5;
        --gold-light: #D4AF37;
        --success: #A5C882;
        --warning: #E8C07D;
        --error: #E8A87C;
    }

    .recent-orders-container {
        font-family: 'Playfair Display', serif;
        background-color: var(--cream-light);
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        max-width: 1200px;
        margin: 0 auto;
    }

    .orders-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid var(--cream-dark);
    }

    .orders-title {
        color: var(--chocolate-dark);
        font-size: 1.8rem;
        font-weight: 600;
        letter-spacing: 0.5px;
    }

    .orders-count {
        background-color: var(--chocolate-accent);
        color: white;
        padding: 0.3rem 0.8rem;
        border-radius: 20px;
        font-size: 0.9rem;
    }

    .orders-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1.2rem;
    }

    .order-card {
        background: white;
        border-radius: 10px;
        padding: 1.5rem;
        border-left: 4px solid var(--chocolate-accent);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
    }

        .order-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

    .order-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 1rem;
    }

    .order-id {
        font-weight: 600;
        color: var(--chocolate-dark);
    }

    .order-date {
        color: var(--chocolate-light);
        font-size: 0.9rem;
    }

    .order-product {
        font-size: 1.1rem;
        color: var(--chocolate-dark);
        margin-bottom: 0.5rem;
        font-weight: 500;
    }

    .order-details {
        display: grid;
        grid-template-columns: 80px 1fr auto;
        gap: 1.5rem;
        align-items: center;
        margin-bottom: 1rem;
    }

    .order-image-container {
        width: 80px;
        height: 80px;
        border-radius: 8px;
        overflow: hidden;
    }

    .order-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .order-meta {
        display: flex;
        gap: 1.5rem;
    }

    .order-meta-item {
        font-size: 0.9rem;
    }

    .order-meta-label {
        color: var(--chocolate-light);
        font-size: 0.8rem;
        margin-bottom: 0.2rem;
    }

    .order-meta-value {
        color: var(--chocolate-dark);
        font-weight: 500;
    }

    .order-amount {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--chocolate-dark);
    }

    .order-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: 1rem;
        border-top: 1px solid var(--cream-dark);
    }

    .order-status {
        padding: 0.3rem 0.8rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .status-pending {
        background-color: rgba(232, 192, 125, 0.2);
        color: var(--chocolate-light);
    }

    .status-completed {
        background-color: rgba(165, 200, 130, 0.2);
        color: var(--success);
    }

    .status-cancelled {
        background-color: rgba(232, 168, 124, 0.2);
        color: var(--error);
    }

    .order-action {
        background-color: var(--chocolate-accent);
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 5px;
        font-size: 0.8rem;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .order-action:hover {
            background-color: var(--chocolate-light);
        }

    .no-orders {
        text-align: center;
        padding: 3rem;
        color: var(--chocolate-light);
    }

    @@media (max-width: 768px) {
        .order-details {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .order-meta {
            flex-wrap: wrap;
            gap: 1rem;
        }

        .order-image-container {
            width: 100%;
            height: 120px;
        }

        .order-amount {
            margin-top: 1rem;
        }
    }
</style>

@if (Model != null && Model.Any())
{
    <div class="recent-orders-container">
        <div class="orders-header">
            <h2 class="orders-title">Recent Orders</h2>
            <span class="orders-count">@Model.Count() orders</span>
        </div>

        <div class="orders-grid">
            @foreach (var item in Model)
            {
                <div class="order-card">
                    <div class="order-header">
                        <div class="order-id">Order #@item.OrderId</div>
                        <div class="order-date">@item.OrderDate.ToString("MMM dd, yyyy")</div>
                    </div>

                    <div class="order-details">
                        <div class="order-image-container">
                            @if (!string.IsNullOrEmpty(item.ImageUrl))
                            {
                                <img src="~/Content/images/@item.ImageUrl" alt="@item.ProductName" class="order-image" />
                            }
                            else
                            {
                                <div style="background: var(--cream-dark); width:100%; height:100%; display:flex; align-items:center; justify-content:center;">
                                    <i class="fas fa-image" style="color: var(--chocolate-light);"></i>
                                </div>
                            }
                        </div>

                        <div>
                            <h3 class="order-product">@item.ProductName</h3>
                            <div class="order-meta">
                                <div class="order-meta-item">
                                    <div class="order-meta-label">Qty</div>
                                    <div class="order-meta-value">@item.Quantity</div>
                                </div>
                                <div class="order-meta-item">
                                    <div class="order-meta-label">Price</div>
                                    <div class="order-meta-value">₹@item.Price</div>
                                </div>
                            </div>
                        </div>

                        <div class="order-amount">₹@item.TotalAmount</div>
                    </div>

                    <div class="order-footer">
                        <div class="order-status status-@item.OrderStatus?.ToLower()">@item.OrderStatus</div>

                        @if (item.OrderStatus?.ToLower() == "processing")
                        {
                            <div class="order-actions">
                                @using (Html.BeginForm("CancelOrder", "Shop", FormMethod.Post))
                                {
                                    @Html.Hidden("id", item.OrderId)
                                    <button type="submit" class="order-action">
                                        Cancel Order
                                    </button>
                                }
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="no-orders">
        <h3>No recent orders</h3>
        <p>Your recent orders will appear here</p>
    </div>
}